name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run integration tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      run_integration_tests:
        description: 'Run integration tests'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/
    
    - name: Type check with mypy
      run: uv run mypy src/
    
    - name: Run unit tests
      run: |
        uv run pytest -xvs --cov=datasets_server --cov-report=xml -m "not integration"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    # Run integration tests on schedule, workflow_dispatch with flag, or if PR has 'integration' label
    if: |
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.run_integration_tests == 'true') ||
      contains(github.event.pull_request.labels.*.name, 'integration')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"
    
    - name: Run integration tests
      env:
        INTEGRATION_TESTS: "1"
      run: |
        uv run pytest -xvs -m integration
      continue-on-error: true  # Don't fail CI if integration tests fail
    
    - name: Report integration test results
      if: always()
      run: |
        echo "Integration tests completed. Check logs for details."